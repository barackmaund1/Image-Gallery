{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","App.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","user","views","downloads","likes","map","tag","index","key","ImageSearch","searchText","useState","text","settext","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JA0CeA,EAxCG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACbC,EAAOD,EAAMC,KAAKC,MAAM,KAC5B,OACI,6BACA,yBAAKC,UAAU,8CAEf,yBAAKC,IAAKJ,EAAMK,aAAcF,UAAU,WAEpC,yBAAKA,UAAU,aACb,yBAAKA,UAAU,0CAAf,YACUH,EAAMM,MAEhB,4BACA,4BACA,0CACCN,EAAMO,OAEP,4BACA,8CACCP,EAAMQ,WAEP,4BACA,0CACAR,EAAMS,SAIV,yBAAKN,UAAU,aACVF,EAAKS,KAAI,SAACC,EAAIC,GAAL,OACV,0BAAMC,IAAKD,EAAOT,UAAU,6FAA5B,IAC4CQ,EAD5C,YCPCG,EAtBK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAAgB,EACZC,mBAAS,IADG,mBAC3BC,EAD2B,KACtBC,EADsB,KAOlC,OACI,yBAAKf,UAAU,kDACf,0BAAMgB,SANO,SAACC,GACdA,EAAEC,iBACFN,EAAWE,IAIed,UAAU,mBAChC,yBAAKA,UAAU,8DACd,2BAAOmB,SAAU,SAAAF,GAAC,OAAIF,EAAQE,EAAEG,OAAOC,QAAQrB,UAAU,6GAA6GsB,KAAK,OAAOC,YAAY,yBAC/L,4BAAQvB,UAAU,kIAAkIsB,KAAK,UAAzJ,cCsBGE,MAhCf,WAAgB,IAAD,EAEiBX,mBAAS,IAF1B,mBAEJY,EAFI,KAEIC,EAFJ,OAGuBb,oBAAS,GAHhC,mBAGJc,EAHI,KAGOC,EAHP,OAIaf,mBAAS,IAJtB,mBAIJgB,EAJI,KAIEC,EAJF,KAiBX,OAXAC,qBAAU,WACNC,MAAM,gCAAD,OAAiCC,qCAAjC,cACsBJ,EADtB,kCAEAK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFX,EAAUW,EAAKC,MACfV,GAAa,MAEhBW,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC/B,CAACX,IAGA,yBAAK7B,UAAY,qBAChB,kBAAC,EAAD,CAAaY,WAAY,SAACE,GAAD,OAASgB,EAAQhB,OACxCa,GAA+B,IAAlBF,EAAOkB,QAAe,wBAAI3C,UAAU,sCAAd,kBAEpC2B,EAAY,wBAAI3B,UAAU,sCAAd,cAAoE,yBAAKA,UAAU,0BAC9FyB,EAAOlB,KAAI,SAAAV,GAAK,OACd,kBAAC,EAAD,CAAWa,IAAKb,EAAM+C,GAAI/C,MAAOA,UCtB9CgD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.5b68303f.chunk.js","sourcesContent":["import React from 'react';\n\nconst ImageCard = ({ image }) => {\n  const tags = image.tags.split(',')\n    return (\n        <div>\n        <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\n     \n        <img src={image.webformatURL} className='w-full'/>\n         \n            <div className='px-6 py-4'>\n              <div className='font-bold text-purple-500 text-xl mb-2'>\n              photo by {image.user}\n              </div>\n              <ul>\n              <li>\n              <strong>Views:</strong>\n              {image.views}\n              </li>\n              <li>\n              <strong>Downloads:</strong>\n              {image.downloads}\n              </li>\n              <li>\n              <strong>Likes:</strong>\n             {image.likes}\n              </li>\n              </ul>\n            </div>\n          <div className='px-6 py-4'>\n             { tags.map((tag,index) =>(\n              <span key={index} className='inline-block bg-gray-200 rounded-full px-3 py-1 \n              text-sm font-semibold text-gray-700 mr-2'>#{tag}1</span>\n             ))}\n            \n            \n          </div>\n        </div>\n        </div>\n    )\n}\n\nexport default ImageCard;\n","import React,{ useState } from 'react';\n\nconst ImageSearch = ({searchText}) => {\n    const [text,settext] =useState('');\n\n    const onSubmit = (e) =>{\n        e.preventDefault();\n        searchText(text);\n    }\n    return (\n        <div className='max-w-sm rounded overflow-hidden my-10 mx-auto'>\n        <form onSubmit={onSubmit} className=\"w-full max-w-sm\">\n            <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\">\n             <input onChange={e => settext(e.target.value)} className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline\" type=\"text\" placeholder=\"Search Image Term...\"/>\n            <button className=\"flax-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded\" type=\"submit\">\n            Search\n            </button>\n             </div>\n        </form>\n            \n        </div>\n    )\n}\n\nexport default ImageSearch;\n","import React, { useState, useEffect } from 'react';\nimport ImageCard from './components/ImageCard';\nimport ImageSearch from './components/ImageSearch'\n\nfunction App() {\n\n    const [images, setImages] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [term, setTerm] = useState('')\n\n    useEffect(() => {\n        fetch(`https://pixabay.com/api/?key=${process.env.\n    REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`)\n            .then(res => res.json())\n            .then(data => {\n                setImages(data.hits);\n                setIsLoading(false)\n            })\n            .catch(err => console.log(err));\n    }, [term]);\n\n    return ( \n        <div className = 'container mx-auto' >\n         <ImageSearch searchText={(text)=> setTerm(text)}/>\n        {! isLoading && images.length === 0 &&<h1 className=\"text-5xl text-center mx-auto mt-32\">No Image Found</h1> }\n        \n         {isLoading ? <h1 className='text-6xl text-center mx-auto mt-32'>Loading...</h1> :<div className='grid grid-cols-3 gap-4'>\n         { images.map(image =>(\n             <ImageCard key={image.id} image={image}/>\n         ))}\n         </div>}\n        \n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}